{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\Components\\\\WardenDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import api from \"../api\";\n// // import User from '../../backend/models/User';\n\n// const WardenDashboard = ({ hostel }) => {\n//   const [outpasses, setOutpasses] = useState([]);\n\n//   useEffect(() => {\n//     fetchOutpasses();\n//     const interval = setInterval(fetchOutpasses, 30000); // Refresh every 30 seconds\n//     return () => clearInterval(interval);\n//   }, [hostel]);\n\n//   const fetchOutpasses = async () => {\n//     try {\n//       const response = await api.get(\n//         `/api/outpasses?hostel=${hostel}&status=pending`\n//       );\n//       // Assuming the response now includes college_id\n//       console.log(\"Outpasses fetched:\", response.data);\n//       setOutpasses(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching outpasses:\", error);\n//     }\n//   };\n\n//   // const handleApprove = async (id) => {\n//   //   try {\n//   //     await api.put(`/api/outpass/${id}`, { status: 'approved' });\n//   //     fetchOutpasses();\n//   //   } catch (error) {\n//   //     console.error('Error approving outpass:', error);\n//   //   }\n//   // };\n//   const handleApprove = async (id) => {\n//     try {\n//       await api.put(`/api/outpass/${id}`, { status: \"approved\" });\n//       setOutpasses(\n//         outpasses.map((outpass) =>\n//           outpass._id === id ? { ...outpass, status: \"approved\" } : outpass\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error approving outpass:\", error);\n//     }\n//   };\n\n//   // const handleReject = async (id) => {\n//   //   try {\n//   //     await api.put(`/api/outpass/${id}`, { status: 'rejected' });\n//   //     fetchOutpasses();\n//   //   } catch (error) {\n//   //     console.error('Error rejecting outpass:', error);\n//   //   }\n//   // };\n//   const handleReject = async (id) => {\n//     try {\n//       await api.put(`/api/outpass/${id}`, { status: \"rejected\" });\n//       setOutpasses(\n//         outpasses.map((outpass) =>\n//           outpass._id === id ? { ...outpass, status: \"rejected\" } : outpass\n//         )\n//       );\n//     } catch (error) {\n//       console.error(\"Error rejecting outpass:\", error);\n//     }\n//   };\n\n//   const formatDateTime = (dateTimeString) => {\n//     if (!dateTimeString) return \"Not specified\";\n//     const date = new Date(dateTimeString);\n//     return date instanceof Date && !isNaN(date)\n//       ? date.toLocaleString(\"en-US\", {\n//           dateStyle: \"medium\",\n//           timeStyle: \"short\",\n//         })\n//       : \"Invalid Date\";\n//   };\n\n//   const handleRemove = (id) => {\n//     setOutpasses(outpasses.filter((outpass) => outpass._id !== id));\n//   };\n\n//   return (\n//     <div className=\"container mx-auto px-4 py-8\">\n//       <h2 className=\"text-4xl font-bold mb-8 text-black\">Warden Dashboard</h2>\n//       {outpasses.length === 0 ? (\n//         <p className=\"text-lg text-gray-600\">No pending outpass requests.</p>\n//       ) : (\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n//           {outpasses.map((outpass) => (\n//             <div\n//               key={outpass._id}\n//               className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 relative\"\n//             >\n//               {/* Cross button */}\n//               <button\n//                 onClick={() => handleRemove(outpass._id)}\n//                 className=\"absolute top-2 right-2 text-gray-500 hover:text-red-500 transition-colors duration-300\"\n//               >\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   className=\"h-6 w-6\"\n//                   fill=\"none\"\n//                   viewBox=\"0 0 24 24\"\n//                   stroke=\"currentColor\"\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     strokeWidth={2}\n//                     d=\"M6 18L18 6M6 6l12 12\"\n//                   />\n//                 </svg>\n//               </button>\n\n//               <div className=\"mb-4\">\n//                 <h3 className=\"text-2xl font-semibold mb-2 text-indigo-600\">\n//                   Name: {outpass.name}\n//                 </h3>\n//                 <p className=\"text-gray-600 mb-1\">\n//                   Hostel: {outpass.hostelName}\n//                 </p>\n//                 <p className=\"text-gray-600 mb-1\">\n//                   Leaving Date:{\" \"}\n//                   {new Date(outpass.leavingDate).toLocaleDateString()}\n//                 </p>\n\n//                 {/* <p className=\"text-gray-600 mb-1\">Leaving Time: {new Date(outpass.leavingTime).toLocaleTimeString()}</p> */}\n//                 <p className=\"text-gray-600 mb-1\">\n//                   Leaving Time: {formatDateTime(outpass.leavingDate)}\n//                 </p>\n\n//                 <p className=\"text-gray-600 mb-1\">\n//                   Returning Date:{\" \"}\n//                   {new Date(outpass.returningDate).toLocaleDateString()}\n//                 </p>\n//                 {/* <p className=\"text-gray-600 mb-1\">Returning Time: {new Date(outpass.returningTime).toLocaleTimeString()}</p> */}\n//                 <p className=\"text-gray-600 mb-1\">\n//                   Returning Time: {formatDateTime(outpass.returningDate)}\n//                 </p>\n\n//                 <p className=\"text-gray-700 mb-4\">{outpass.reason}</p>\n//               </div>\n//               <div className=\"flex justify-between\">\n//                 <button\n//                   onClick={() => handleApprove(outpass._id)}\n//                   className={`bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\n//                     outpass.status === \"approved\"\n//                       ? \"opacity-50 cursor-not-allowed\"\n//                       : \"\"\n//                   }`}\n//                   disabled={outpass.status === \"approved\"}\n//                 >\n//                   {outpass.status === \"approved\" ? \"Approved\" : \"Approve\"}\n\n//                   {/* Approve */}\n//                 </button>\n//                 <button\n//                   onClick={() => handleReject(outpass._id)}\n//                   className={`bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\n//                     outpass.status === \"rejected\"\n//                       ? \"opacity-50 cursor-not-allowed\"\n//                       : \"\"\n//                   }`}\n//                   disabled={outpass.status === \"rejected\"}\n//                 >\n//                   {outpass.status === \"rejected\" ? \"Rejected\" : \"Reject\"}\n\n//                   {/* Reject */}\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default WardenDashboard;\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../api\";\n// import { getWardenInfo } from \"../../controllers/WardenController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WardenDashboard = () => {\n  _s();\n  const [outpasses, setOutpasses] = useState([]);\n  const [wardenHostel, setWardenHostel] = useState(null);\n  // const [hostelName, setHostelName] = useState(null);\n\n  useEffect(() => {\n    const fetchWardenInfo = async () => {\n      try {\n        const response = await api.get('/api/Warden/info');\n        setWardenHostel(response.data.hostelName);\n      } catch (error) {\n        console.error(\"Error fetching warden info:\", error);\n      }\n    };\n    fetchWardenInfo();\n  }, []);\n  console.log(\"Warden's hostel:\", wardenHostel);\n  useEffect(() => {\n    if (wardenHostel === '12s1') {\n      fetchOutpasses();\n      const interval = setInterval(fetchOutpasses, 30000); // Refresh every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, [wardenHostel]);\n  const fetchOutpasses = async () => {\n    try {\n      const response = await api.get(`/api/outpasses?hostel=${wardenHostel}&status=pending`);\n      console.log(\"All outpasses:\", response.data);\n\n      // Filter outpasses to only include those matching the warden's hostel\n      const filteredOutpasses = response.data.filter(outpass => outpass.hostelName === wardenHostel);\n      console.log(\"Filtered outpasses:\", filteredOutpasses);\n      setOutpasses(filteredOutpasses);\n      console.log(\"Filtered outpasses:\", filteredOutpasses);\n    } catch (error) {\n      console.error(\"Error fetching outpasses:\", error);\n    }\n  };\n  const handleApprove = async id => {\n    try {\n      await api.put(`/api/outpass/${id}`, {\n        status: \"approved\"\n      });\n      setOutpasses(outpasses.map(outpass => outpass._id === id ? {\n        ...outpass,\n        status: \"approved\"\n      } : outpass));\n    } catch (error) {\n      console.error(\"Error approving outpass:\", error);\n    }\n  };\n  const handleReject = async id => {\n    try {\n      await api.put(`/api/outpass/${id}`, {\n        status: \"rejected\"\n      });\n      setOutpasses(outpasses.map(outpass => outpass._id === id ? {\n        ...outpass,\n        status: \"rejected\"\n      } : outpass));\n    } catch (error) {\n      console.error(\"Error rejecting outpass:\", error);\n    }\n  };\n  const formatDateTime = dateTimeString => {\n    if (!dateTimeString) return \"Not specified\";\n    const date = new Date(dateTimeString);\n    return date instanceof Date && !isNaN(date) ? date.toLocaleString(\"en-US\", {\n      dateStyle: \"medium\",\n      timeStyle: \"short\"\n    }) : \"Invalid Date\";\n  };\n  const handleRemove = id => {\n    setOutpasses(outpasses.filter(outpass => outpass._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-8 text-black\",\n      children: \"Warden Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), outpasses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-600\",\n      children: \"No pending outpass requests.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: outpasses.map(outpass => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemove(outpass._id),\n          className: \"absolute top-2 right-2 text-gray-500 hover:text-red-500 transition-colors duration-300\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold mb-2 text-indigo-600\",\n            children: [\"Name: \", outpass.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-1\",\n            children: [\"Hostel: \", outpass.hostelName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-1\",\n            children: [\"Leaving Date:\", \" \", new Date(outpass.leavingDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-1\",\n            children: [\"Leaving Time: \", formatDateTime(outpass.leavingDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-1\",\n            children: [\"Returning Date:\", \" \", new Date(outpass.returningDate).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-1\",\n            children: [\"Returning Time: \", formatDateTime(outpass.returningDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 mb-4\",\n            children: outpass.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleApprove(outpass._id),\n            className: `bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${outpass.status === \"approved\" ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n            disabled: outpass.status === \"approved\",\n            children: outpass.status === \"approved\" ? \"Approved\" : \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReject(outpass._id),\n            className: `bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${outpass.status === \"rejected\" ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n            disabled: outpass.status === \"rejected\",\n            children: outpass.status === \"rejected\" ? \"Rejected\" : \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this)]\n      }, outpass._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(WardenDashboard, \"dAsdh4scVF9QB5omeQWDUxH8paM=\");\n_c = WardenDashboard;\nexport default WardenDashboard;\nvar _c;\n$RefreshReg$(_c, \"WardenDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","WardenDashboard","_s","outpasses","setOutpasses","wardenHostel","setWardenHostel","fetchWardenInfo","response","get","data","hostelName","error","console","log","fetchOutpasses","interval","setInterval","clearInterval","filteredOutpasses","filter","outpass","handleApprove","id","put","status","map","_id","handleReject","formatDateTime","dateTimeString","date","Date","isNaN","toLocaleString","dateStyle","timeStyle","handleRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","name","leavingDate","toLocaleDateString","returningDate","reason","disabled","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/Components/WardenDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import api from \"../api\";\r\n// // import User from '../../backend/models/User';\r\n\r\n// const WardenDashboard = ({ hostel }) => {\r\n//   const [outpasses, setOutpasses] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchOutpasses();\r\n//     const interval = setInterval(fetchOutpasses, 30000); // Refresh every 30 seconds\r\n//     return () => clearInterval(interval);\r\n//   }, [hostel]);\r\n\r\n//   const fetchOutpasses = async () => {\r\n//     try {\r\n//       const response = await api.get(\r\n//         `/api/outpasses?hostel=${hostel}&status=pending`\r\n//       );\r\n//       // Assuming the response now includes college_id\r\n//       console.log(\"Outpasses fetched:\", response.data);\r\n//       setOutpasses(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching outpasses:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const handleApprove = async (id) => {\r\n//   //   try {\r\n//   //     await api.put(`/api/outpass/${id}`, { status: 'approved' });\r\n//   //     fetchOutpasses();\r\n//   //   } catch (error) {\r\n//   //     console.error('Error approving outpass:', error);\r\n//   //   }\r\n//   // };\r\n//   const handleApprove = async (id) => {\r\n//     try {\r\n//       await api.put(`/api/outpass/${id}`, { status: \"approved\" });\r\n//       setOutpasses(\r\n//         outpasses.map((outpass) =>\r\n//           outpass._id === id ? { ...outpass, status: \"approved\" } : outpass\r\n//         )\r\n//       );\r\n//     } catch (error) {\r\n//       console.error(\"Error approving outpass:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const handleReject = async (id) => {\r\n//   //   try {\r\n//   //     await api.put(`/api/outpass/${id}`, { status: 'rejected' });\r\n//   //     fetchOutpasses();\r\n//   //   } catch (error) {\r\n//   //     console.error('Error rejecting outpass:', error);\r\n//   //   }\r\n//   // };\r\n//   const handleReject = async (id) => {\r\n//     try {\r\n//       await api.put(`/api/outpass/${id}`, { status: \"rejected\" });\r\n//       setOutpasses(\r\n//         outpasses.map((outpass) =>\r\n//           outpass._id === id ? { ...outpass, status: \"rejected\" } : outpass\r\n//         )\r\n//       );\r\n//     } catch (error) {\r\n//       console.error(\"Error rejecting outpass:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const formatDateTime = (dateTimeString) => {\r\n//     if (!dateTimeString) return \"Not specified\";\r\n//     const date = new Date(dateTimeString);\r\n//     return date instanceof Date && !isNaN(date)\r\n//       ? date.toLocaleString(\"en-US\", {\r\n//           dateStyle: \"medium\",\r\n//           timeStyle: \"short\",\r\n//         })\r\n//       : \"Invalid Date\";\r\n//   };\r\n\r\n//   const handleRemove = (id) => {\r\n//     setOutpasses(outpasses.filter((outpass) => outpass._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto px-4 py-8\">\r\n//       <h2 className=\"text-4xl font-bold mb-8 text-black\">Warden Dashboard</h2>\r\n//       {outpasses.length === 0 ? (\r\n//         <p className=\"text-lg text-gray-600\">No pending outpass requests.</p>\r\n//       ) : (\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n//           {outpasses.map((outpass) => (\r\n//             <div\r\n//               key={outpass._id}\r\n//               className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 relative\"\r\n//             >\r\n//               {/* Cross button */}\r\n//               <button\r\n//                 onClick={() => handleRemove(outpass._id)}\r\n//                 className=\"absolute top-2 right-2 text-gray-500 hover:text-red-500 transition-colors duration-300\"\r\n//               >\r\n//                 <svg\r\n//                   xmlns=\"http://www.w3.org/2000/svg\"\r\n//                   className=\"h-6 w-6\"\r\n//                   fill=\"none\"\r\n//                   viewBox=\"0 0 24 24\"\r\n//                   stroke=\"currentColor\"\r\n//                 >\r\n//                   <path\r\n//                     strokeLinecap=\"round\"\r\n//                     strokeLinejoin=\"round\"\r\n//                     strokeWidth={2}\r\n//                     d=\"M6 18L18 6M6 6l12 12\"\r\n//                   />\r\n//                 </svg>\r\n//               </button>\r\n\r\n//               <div className=\"mb-4\">\r\n//                 <h3 className=\"text-2xl font-semibold mb-2 text-indigo-600\">\r\n//                   Name: {outpass.name}\r\n//                 </h3>\r\n//                 <p className=\"text-gray-600 mb-1\">\r\n//                   Hostel: {outpass.hostelName}\r\n//                 </p>\r\n//                 <p className=\"text-gray-600 mb-1\">\r\n//                   Leaving Date:{\" \"}\r\n//                   {new Date(outpass.leavingDate).toLocaleDateString()}\r\n//                 </p>\r\n\r\n//                 {/* <p className=\"text-gray-600 mb-1\">Leaving Time: {new Date(outpass.leavingTime).toLocaleTimeString()}</p> */}\r\n//                 <p className=\"text-gray-600 mb-1\">\r\n//                   Leaving Time: {formatDateTime(outpass.leavingDate)}\r\n//                 </p>\r\n\r\n//                 <p className=\"text-gray-600 mb-1\">\r\n//                   Returning Date:{\" \"}\r\n//                   {new Date(outpass.returningDate).toLocaleDateString()}\r\n//                 </p>\r\n//                 {/* <p className=\"text-gray-600 mb-1\">Returning Time: {new Date(outpass.returningTime).toLocaleTimeString()}</p> */}\r\n//                 <p className=\"text-gray-600 mb-1\">\r\n//                   Returning Time: {formatDateTime(outpass.returningDate)}\r\n//                 </p>\r\n\r\n//                 <p className=\"text-gray-700 mb-4\">{outpass.reason}</p>\r\n//               </div>\r\n//               <div className=\"flex justify-between\">\r\n//                 <button\r\n//                   onClick={() => handleApprove(outpass._id)}\r\n//                   className={`bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\r\n//                     outpass.status === \"approved\"\r\n//                       ? \"opacity-50 cursor-not-allowed\"\r\n//                       : \"\"\r\n//                   }`}\r\n//                   disabled={outpass.status === \"approved\"}\r\n//                 >\r\n//                   {outpass.status === \"approved\" ? \"Approved\" : \"Approve\"}\r\n\r\n//                   {/* Approve */}\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleReject(outpass._id)}\r\n//                   className={`bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\r\n//                     outpass.status === \"rejected\"\r\n//                       ? \"opacity-50 cursor-not-allowed\"\r\n//                       : \"\"\r\n//                   }`}\r\n//                   disabled={outpass.status === \"rejected\"}\r\n//                 >\r\n//                   {outpass.status === \"rejected\" ? \"Rejected\" : \"Reject\"}\r\n\r\n//                   {/* Reject */}\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default WardenDashboard;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\n// import { getWardenInfo } from \"../../controllers/WardenController\";\r\n\r\n\r\nconst WardenDashboard = () => {\r\n  const [outpasses, setOutpasses] = useState([]);\r\n  const [wardenHostel, setWardenHostel] = useState(null);\r\n  // const [hostelName, setHostelName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWardenInfo = async () => {\r\n      try {\r\n        const response = await api.get('/api/Warden/info');\r\n        setWardenHostel(response.data.hostelName);\r\n      } catch (error) {\r\n        console.error(\"Error fetching warden info:\", error);\r\n      }\r\n    };\r\n    fetchWardenInfo();\r\n  }, []);\r\n\r\n  console.log(\"Warden's hostel:\", wardenHostel);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(wardenHostel === '12s1'){\r\n      fetchOutpasses();\r\n      const interval = setInterval(fetchOutpasses, 30000); // Refresh every 30 seconds\r\n      return () => clearInterval(interval);\r\n    }\r\n   }, [wardenHostel]);\r\n\r\n  const fetchOutpasses = async () => {\r\n    try {\r\n      const response = await api.get(\r\n        `/api/outpasses?hostel=${wardenHostel}&status=pending`\r\n      );\r\n      console.log(\"All outpasses:\", response.data);\r\n\r\n      // Filter outpasses to only include those matching the warden's hostel\r\n      const filteredOutpasses = response.data.filter(outpass => outpass.hostelName === wardenHostel);\r\n      console.log(\"Filtered outpasses:\", filteredOutpasses);\r\n      setOutpasses(filteredOutpasses);\r\n      console.log(\"Filtered outpasses:\", filteredOutpasses);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching outpasses:\", error);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (id) => {\r\n    try {\r\n      await api.put(`/api/outpass/${id}`, { status: \"approved\" });\r\n      setOutpasses(\r\n        outpasses.map((outpass) =>\r\n          outpass._id === id ? { ...outpass, status: \"approved\" } : outpass\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error approving outpass:\", error);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (id) => {\r\n    try {\r\n      await api.put(`/api/outpass/${id}`, { status: \"rejected\" });\r\n      setOutpasses(\r\n        outpasses.map((outpass) =>\r\n          outpass._id === id ? { ...outpass, status: \"rejected\" } : outpass\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error rejecting outpass:\", error);\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (dateTimeString) => {\r\n    if (!dateTimeString) return \"Not specified\";\r\n    const date = new Date(dateTimeString);\r\n    return date instanceof Date && !isNaN(date)\r\n      ? date.toLocaleString(\"en-US\", {\r\n          dateStyle: \"medium\",\r\n          timeStyle: \"short\",\r\n        })\r\n      : \"Invalid Date\";\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    setOutpasses(outpasses.filter((outpass) => outpass._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h2 className=\"text-4xl font-bold mb-8 text-black\">Warden Dashboard</h2>\r\n      {outpasses.length === 0 ? (\r\n        <p className=\"text-lg text-gray-600\">No pending outpass requests.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {outpasses.map((outpass) => (\r\n            <div\r\n              key={outpass._id}\r\n              className=\"bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 relative\"\r\n            >\r\n              <button\r\n                onClick={() => handleRemove(outpass._id)}\r\n                className=\"absolute top-2 right-2 text-gray-500 hover:text-red-500 transition-colors duration-300\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n\r\n              <div className=\"mb-4\">\r\n                <h3 className=\"text-2xl font-semibold mb-2 text-indigo-600\">\r\n                  Name: {outpass.name}\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-1\">\r\n                  Hostel: {outpass.hostelName}\r\n                </p>\r\n                <p className=\"text-gray-600 mb-1\">\r\n                  Leaving Date:{\" \"}\r\n                  {new Date(outpass.leavingDate).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"text-gray-600 mb-1\">\r\n                  Leaving Time: {formatDateTime(outpass.leavingDate)}\r\n                </p>\r\n\r\n                <p className=\"text-gray-600 mb-1\">\r\n                  Returning Date:{\" \"}\r\n                  {new Date(outpass.returningDate).toLocaleDateString()}\r\n                </p>\r\n                <p className=\"text-gray-600 mb-1\">\r\n                  Returning Time: {formatDateTime(outpass.returningDate)}\r\n                </p>\r\n\r\n                <p className=\"text-gray-700 mb-4\">{outpass.reason}</p>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <button\r\n                  onClick={() => handleApprove(outpass._id)}\r\n                  className={`bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\r\n                    outpass.status === \"approved\"\r\n                      ? \"opacity-50 cursor-not-allowed\"\r\n                      : \"\"\r\n                  }`}\r\n                  disabled={outpass.status === \"approved\"}\r\n                >\r\n                  {outpass.status === \"approved\" ? \"Approved\" : \"Approve\"}\r\n                </button>\r\n                <button\r\n                  onClick={() => handleReject(outpass._id)}\r\n                  className={`bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-full transition duration-300 ${\r\n                    outpass.status === \"rejected\"\r\n                      ? \"opacity-50 cursor-not-allowed\"\r\n                      : \"\"\r\n                  }`}\r\n                  disabled={outpass.status === \"rejected\"}\r\n                >\r\n                  {outpass.status === \"rejected\" ? \"Rejected\" : \"Reject\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WardenDashboard;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD;;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}