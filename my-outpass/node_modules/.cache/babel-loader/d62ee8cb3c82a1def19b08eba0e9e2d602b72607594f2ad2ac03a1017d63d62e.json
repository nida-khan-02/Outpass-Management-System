{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport const login = async credentials => {\n  const response = await axios.post(`${API_URL}/login`, credentials);\n  return response.data;\n};\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    localStorage.setItem('token', token);\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n  }\n};\nexport const getAuthToken = () => {\n  return localStorage.getItem('token');\n};\nexport const setRefreshToken = token => {\n  localStorage.setItem('refreshToken', token);\n};\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refreshToken');\n};\nexport const refreshAuthToken = async () => {\n  try {\n    const refreshToken = getRefreshToken();\n    const response = await axios.post(`${API_URL}/auth/refresh-token`, {\n      refreshToken\n    });\n    const {\n      token\n    } = response.data;\n    setAuthToken(token);\n    return token;\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","credentials","response","post","data","setAuthToken","token","defaults","headers","common","localStorage","setItem","removeItem","getAuthToken","getItem","setRefreshToken","getRefreshToken","refreshAuthToken","refreshToken","error","console"],"sources":["F:/Out/Outpass-Management-System/my-outpass/src/Services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`${API_URL}/login`, credentials);\r\n  return response.data;\r\n};\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\nexport const setRefreshToken = (token) => {\r\n  localStorage.setItem('refreshToken', token);\r\n};\r\n\r\nexport const getRefreshToken = () => {\r\n  return localStorage.getItem('refreshToken');\r\n};\r\n\r\nexport const refreshAuthToken = async () => {\r\n  try {\r\n    const refreshToken = getRefreshToken();\r\n    const response = await axios.post(`${API_URL}/auth/refresh-token`, { refreshToken });\r\n    const { token } = response.data;\r\n    setAuthToken(token);\r\n    return token;\r\n  } catch (error) {\r\n    console.error('Error refreshing token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAChD,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEE,WAAW,CAAC;EAClE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;IAClEI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACtC,CAAC,MAAM;IACL,OAAOR,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACrDC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIT,KAAK,IAAK;EACxCI,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,KAAK,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMU,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAON,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,YAAY,GAAGF,eAAe,CAAC,CAAC;IACtC,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,qBAAqB,EAAE;MAAEmB;IAAa,CAAC,CAAC;IACpF,MAAM;MAAEZ;IAAM,CAAC,GAAGJ,QAAQ,CAACE,IAAI;IAC/BC,YAAY,CAACC,KAAK,CAAC;IACnB,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOa,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}