{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import axios from 'axios'; \nimport Login from './Components/Login';\nimport StudentDashboard from './Components/StudentDashboard';\nimport WardenDashboard from './Components/WardenDashboard';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const [hostelName, setHostelName] = useState(null);\n\n  // Function to check if the user is authenticated\n  // const checkAuthentication = () => {\n  //   const token = localStorage.getItem('token');\n  //   return token !== null;\n  // };\n\n  // Function to fetch the user's hostelName once they are logged in\n  // const fetchHostelName = async () => {\n  //  // Fetch the user's hostelName using the token\n  //   const token = localStorage.getItem('token');\n  //   // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\n  //   if (token) {\n  //     try {\n  //       const user = await axios.get('http://localhost:5000/api/auth/user', {\n  //         headers: {\n  //           Authorization: `Bearer ${token}`\n  //         }\n  //       });\n  //       setHostelName(user.hostelName);\n  //     } catch (error) {\n  //       console.error('Error fetching hostelName:', error);\n  //       // Handle token expiration or other auth errors here\n  //       setIsAuthenticated(false);\n  //       localStorage.removeItem('token');\n  //     }\n  //   }\n  // };\n\n  // // Effect to check authentication on page load\n  // useEffect(() => {\n  //   const authenticated = checkAuthentication();\n  //   setIsAuthenticated(authenticated);\n  //   if (authenticated) {\n  //     fetchHostelName();  // Fetch hostelName if the user is authenticated\n  //   }\n  // }, []);\n\n  const {\n    currentUser\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: !isAuthenticated ?\n        /*#__PURE__*/\n        // Only render Login component if not authenticated\n        _jsxDEV(Route, {\n          path: \"/\",\n          element: !currentUser ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: currentUser.category === 'student' ? '/student-dashboard' : '/warden-dashboard'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/student-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/warden-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(WardenDashboard, {\n              hostel: hostelName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Login","StudentDashboard","WardenDashboard","AuthProvider","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentUser","children","isAuthenticated","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Navigate","to","category","hostel","hostelName","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n// import axios from 'axios'; \r\nimport Login from './Components/Login';\r\nimport StudentDashboard from './Components/StudentDashboard';\r\nimport WardenDashboard from './Components/WardenDashboard';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  // const [hostelName, setHostelName] = useState(null);\r\n \r\n\r\n\r\n\r\n  // Function to check if the user is authenticated\r\n  // const checkAuthentication = () => {\r\n  //   const token = localStorage.getItem('token');\r\n  //   return token !== null;\r\n  // };\r\n\r\n  // Function to fetch the user's hostelName once they are logged in\r\n  // const fetchHostelName = async () => {\r\n  //  // Fetch the user's hostelName using the token\r\n  //   const token = localStorage.getItem('token');\r\n  //   // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\r\n  //   if (token) {\r\n  //     try {\r\n  //       const user = await axios.get('http://localhost:5000/api/auth/user', {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`\r\n  //         }\r\n  //       });\r\n  //       setHostelName(user.hostelName);\r\n  //     } catch (error) {\r\n  //       console.error('Error fetching hostelName:', error);\r\n  //       // Handle token expiration or other auth errors here\r\n  //       setIsAuthenticated(false);\r\n  //       localStorage.removeItem('token');\r\n  //     }\r\n  //   }\r\n  // };\r\n  \r\n  \r\n  \r\n\r\n  // // Effect to check authentication on page load\r\n  // useEffect(() => {\r\n  //   const authenticated = checkAuthentication();\r\n  //   setIsAuthenticated(authenticated);\r\n  //   if (authenticated) {\r\n  //     fetchHostelName();  // Fetch hostelName if the user is authenticated\r\n  //   }\r\n  // }, []);\r\n \r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <AuthProvider>\r\n    <Router>\r\n      <Routes>\r\n        {!isAuthenticated ? (\r\n          // Only render Login component if not authenticated\r\n          <Route path=\"/\" element={!currentUser ? <Login /> : <Navigate to={currentUser.category === 'student' ? '/student-dashboard' : '/warden-dashboard'} />} />\r\n        ) : (\r\n          <>\r\n            <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n            {/* Pass hostelName as a prop to WardenDashboard */}\r\n            <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE;AACA,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,YAAY,EAAEC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAK/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;;EAKA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEC;EAAY,CAAC,GAAGP,OAAO,CAAC,CAAC;EAEjC,oBACEE,OAAA,CAACH,YAAY;IAAAS,QAAA,eACbN,OAAA,CAACT,MAAM;MAAAe,QAAA,eACLN,OAAA,CAACP,MAAM;QAAAa,QAAA,EACJ,CAACC,eAAe;QAAA;QACf;QACAP,OAAA,CAACR,KAAK;UAACgB,IAAI,EAAC,GAAG;UAACC,OAAO,EAAE,CAACJ,WAAW,gBAAGL,OAAA,CAACN,KAAK;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGb,OAAA,CAACc,QAAQ;YAACC,EAAE,EAAEV,WAAW,CAACW,QAAQ,KAAK,SAAS,GAAG,oBAAoB,GAAG;UAAoB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEzJb,OAAA,CAAAE,SAAA;UAAAI,QAAA,gBACEN,OAAA,CAACR,KAAK;YAACgB,IAAI,EAAC,oBAAoB;YAACC,OAAO,eAAET,OAAA,CAACL,gBAAgB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAElEb,OAAA,CAACR,KAAK;YAACgB,IAAI,EAAC,mBAAmB;YAACC,OAAO,eAAET,OAAA,CAACJ,eAAe;cAACqB,MAAM,EAAEC;YAAW;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eACpF;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB;AAACT,EAAA,CAnEQD,GAAG;EAAA,QA+CcL,OAAO;AAAA;AAAAqB,EAAA,GA/CxBhB,GAAG;AAsEZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}