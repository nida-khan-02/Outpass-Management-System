{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './Components/Login';\nimport StudentDashboard from './Components/StudentDashboard';\nimport WardenDashboard from './Components/WardenDashboard';\nimport { AuthProvider } from './contexts/AuthContext';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [hostelName, setHostelName] = useState(null);\n\n  // Function to check if the user is authenticated\n  // const checkAuthentication = () => {\n  //   const token = localStorage.getItem('token');\n  //   return token !== null;\n  // };\n\n  // Function to fetch the user's hostelName once they are logged in\n  const fetchHostelName = async () => {\n    //  // Fetch the user's hostelName using the token\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n    //   // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\n    if (token) {\n      try {\n        const response = await axios.get('http://localhost:5000/api/auth/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setHostelName(response.data.hostelName);\n        console.log('Hostel Name:', response.hostelName);\n        console.log('Category:', response.category);\n      } catch (error) {\n        console.error('Error fetching hostelName:', error);\n        // Handle token expiration or other auth errors here\n        // setIsAuthenticated(false);\n        // localStorage.removeItem('token');\n      }\n    } else {\n      console.log('No token found');\n    }\n  };\n\n  // // Effect to check authentication on page load\n  useEffect(() => {\n    // const authenticated = checkAuthentication();\n    // setIsAuthenticated(authenticated);\n    // if (authenticated) {\n    fetchHostelName(); // Fetch hostelName if the user is authenticated\n    // }\n  }, [hostelName]);\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/student-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/warden-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(WardenDashboard, {\n              hostel: hostelName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"StQr6PawvhlXxD9NW5Za2Ehxvhg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","axios","Login","StudentDashboard","WardenDashboard","AuthProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","hostelName","setHostelName","fetchHostelName","token","localStorage","getItem","console","log","response","get","headers","Authorization","data","category","error","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","hostel","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport axios from 'axios'; \r\nimport Login from './Components/Login';\r\nimport StudentDashboard from './Components/StudentDashboard';\r\nimport WardenDashboard from './Components/WardenDashboard';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [hostelName, setHostelName] = useState(null);\r\n \r\n\r\n\r\n\r\n  // Function to check if the user is authenticated\r\n  // const checkAuthentication = () => {\r\n  //   const token = localStorage.getItem('token');\r\n  //   return token !== null;\r\n  // };\r\n\r\n  // Function to fetch the user's hostelName once they are logged in\r\n  const fetchHostelName = async () => {\r\n  //  // Fetch the user's hostelName using the token\r\n    const token = localStorage.getItem('token');\r\n    console.log('Token:', token);\r\n  //   // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\r\n    if (token) {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/auth/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setHostelName(response.data.hostelName);\r\n        console.log('Hostel Name:', response.hostelName);\r\n        console.log('Category:', response.category);\r\n      } catch (error) {\r\n        console.error('Error fetching hostelName:', error);\r\n        // Handle token expiration or other auth errors here\r\n        // setIsAuthenticated(false);\r\n        // localStorage.removeItem('token');\r\n      } \r\n    } else {\r\n      console.log('No token found')\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  // // Effect to check authentication on page load\r\n  useEffect(() => {\r\n    // const authenticated = checkAuthentication();\r\n    // setIsAuthenticated(authenticated);\r\n    // if (authenticated) {\r\n      fetchHostelName();  // Fetch hostelName if the user is authenticated\r\n    // }\r\n  }, [hostelName]);\r\n \r\n \r\n\r\n\r\n  return (\r\n    <AuthProvider>\r\n    <Router>\r\n      <Routes>\r\n        \r\n\r\n          {/* // Only render Login component if not authenticated */}\r\n          <Route path=\"/\" element={<Login />} />\r\n\r\n        \r\n          <>\r\n            <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n            {/* Pass hostelName as a prop to WardenDashboard */}\r\n            <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\r\n          </>\r\n        \r\n      </Routes>\r\n    </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}