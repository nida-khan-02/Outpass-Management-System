{"ast":null,"code":"'use strict';\n\nconst SkipPopulateValue = require('./skipPopulateValue');\nconst parentPaths = require('../path/parentPaths');\nconst {\n  trusted\n} = require('../query/trusted');\nconst hasDollarKeys = require('../query/hasDollarKeys');\nmodule.exports = function createPopulateQueryFilter(ids, _match, _foreignField, model, skipInvalidIds) {\n  const match = _formatMatch(_match);\n  if (_foreignField.size === 1) {\n    const foreignField = Array.from(_foreignField)[0];\n    const foreignSchemaType = model.schema.path(foreignField);\n    if (foreignField !== '_id' || !match['_id']) {\n      ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n      match[foreignField] = trusted({\n        $in: ids\n      });\n    } else if (foreignField === '_id' && match['_id']) {\n      const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ? match[foreignField] : {\n        $eq: match[foreignField]\n      };\n      match[foreignField] = {\n        ...trusted({\n          $in: ids\n        }),\n        ...userSpecifiedMatch\n      };\n    }\n    const _parentPaths = parentPaths(foreignField);\n    for (let i = 0; i < _parentPaths.length - 1; ++i) {\n      const cur = _parentPaths[i];\n      if (match[cur] != null && match[cur].$elemMatch != null) {\n        match[cur].$elemMatch[foreignField.slice(cur.length + 1)] = trusted({\n          $in: ids\n        });\n        delete match[foreignField];\n        break;\n      }\n    }\n  } else {\n    const $or = [];\n    if (Array.isArray(match.$or)) {\n      match.$and = [{\n        $or: match.$or\n      }, {\n        $or: $or\n      }];\n      delete match.$or;\n    } else {\n      match.$or = $or;\n    }\n    for (const foreignField of _foreignField) {\n      if (foreignField !== '_id' || !match['_id']) {\n        const foreignSchemaType = model.schema.path(foreignField);\n        ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n        $or.push({\n          [foreignField]: {\n            $in: ids\n          }\n        });\n      } else if (foreignField === '_id' && match['_id']) {\n        const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ? match[foreignField] : {\n          $eq: match[foreignField]\n        };\n        match[foreignField] = {\n          ...trusted({\n            $in: ids\n          }),\n          ...userSpecifiedMatch\n        };\n      }\n    }\n  }\n  return match;\n};\n\n/**\n * Optionally filter out invalid ids that don't conform to foreign field's schema\n * to avoid cast errors (gh-7706)\n * @param {Array} ids\n * @param {SchemaType} foreignSchemaType\n * @param {Boolean} [skipInvalidIds]\n * @api private\n */\n\nfunction _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds) {\n  ids = ids.filter(v => !(v instanceof SkipPopulateValue));\n  if (!skipInvalidIds) {\n    return ids;\n  }\n  return ids.filter(id => {\n    try {\n      foreignSchemaType.cast(id);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n}\n\n/**\n * Format `mod.match` given that it may be an array that we need to $or if\n * the client has multiple docs with match functions\n * @param {Array|Any} match\n * @api private\n */\n\nfunction _formatMatch(match) {\n  if (Array.isArray(match)) {\n    if (match.length > 1) {\n      return {\n        $or: [].concat(match.map(m => Object.assign({}, m)))\n      };\n    }\n    return Object.assign({}, match[0]);\n  }\n  return Object.assign({}, match);\n}","map":{"version":3,"names":["SkipPopulateValue","require","parentPaths","trusted","hasDollarKeys","module","exports","createPopulateQueryFilter","ids","_match","_foreignField","model","skipInvalidIds","match","_formatMatch","size","foreignField","Array","from","foreignSchemaType","schema","path","_filterInvalidIds","$in","userSpecifiedMatch","$eq","_parentPaths","i","length","cur","$elemMatch","slice","$or","isArray","$and","push","filter","v","id","cast","err","concat","map","m","Object","assign"],"sources":["E:/Out/my-outpass/node_modules/mongoose/lib/helpers/populate/createPopulateQueryFilter.js"],"sourcesContent":["'use strict';\n\nconst SkipPopulateValue = require('./skipPopulateValue');\nconst parentPaths = require('../path/parentPaths');\nconst { trusted } = require('../query/trusted');\nconst hasDollarKeys = require('../query/hasDollarKeys');\n\nmodule.exports = function createPopulateQueryFilter(ids, _match, _foreignField, model, skipInvalidIds) {\n  const match = _formatMatch(_match);\n\n  if (_foreignField.size === 1) {\n    const foreignField = Array.from(_foreignField)[0];\n    const foreignSchemaType = model.schema.path(foreignField);\n    if (foreignField !== '_id' || !match['_id']) {\n      ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n      match[foreignField] = trusted({ $in: ids });\n    } else if (foreignField === '_id' && match['_id']) {\n      const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ?\n        match[foreignField] :\n        { $eq: match[foreignField] };\n      match[foreignField] = { ...trusted({ $in: ids }), ...userSpecifiedMatch };\n    }\n\n    const _parentPaths = parentPaths(foreignField);\n    for (let i = 0; i < _parentPaths.length - 1; ++i) {\n      const cur = _parentPaths[i];\n      if (match[cur] != null && match[cur].$elemMatch != null) {\n        match[cur].$elemMatch[foreignField.slice(cur.length + 1)] = trusted({ $in: ids });\n        delete match[foreignField];\n        break;\n      }\n    }\n  } else {\n    const $or = [];\n    if (Array.isArray(match.$or)) {\n      match.$and = [{ $or: match.$or }, { $or: $or }];\n      delete match.$or;\n    } else {\n      match.$or = $or;\n    }\n    for (const foreignField of _foreignField) {\n      if (foreignField !== '_id' || !match['_id']) {\n        const foreignSchemaType = model.schema.path(foreignField);\n        ids = _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds);\n        $or.push({ [foreignField]: { $in: ids } });\n      } else if (foreignField === '_id' && match['_id']) {\n        const userSpecifiedMatch = hasDollarKeys(match[foreignField]) ?\n          match[foreignField] :\n          { $eq: match[foreignField] };\n        match[foreignField] = { ...trusted({ $in: ids }), ...userSpecifiedMatch };\n      }\n    }\n  }\n\n  return match;\n};\n\n/**\n * Optionally filter out invalid ids that don't conform to foreign field's schema\n * to avoid cast errors (gh-7706)\n * @param {Array} ids\n * @param {SchemaType} foreignSchemaType\n * @param {Boolean} [skipInvalidIds]\n * @api private\n */\n\nfunction _filterInvalidIds(ids, foreignSchemaType, skipInvalidIds) {\n  ids = ids.filter(v => !(v instanceof SkipPopulateValue));\n  if (!skipInvalidIds) {\n    return ids;\n  }\n  return ids.filter(id => {\n    try {\n      foreignSchemaType.cast(id);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  });\n}\n\n/**\n * Format `mod.match` given that it may be an array that we need to $or if\n * the client has multiple docs with match functions\n * @param {Array|Any} match\n * @api private\n */\n\nfunction _formatMatch(match) {\n  if (Array.isArray(match)) {\n    if (match.length > 1) {\n      return { $or: [].concat(match.map(m => Object.assign({}, m))) };\n    }\n    return Object.assign({}, match[0]);\n  }\n  return Object.assign({}, match);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}