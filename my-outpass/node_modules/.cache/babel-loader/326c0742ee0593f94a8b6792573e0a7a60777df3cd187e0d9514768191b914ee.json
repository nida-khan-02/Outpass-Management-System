{"ast":null,"code":"'use strict';\n\nconst each = require('../helpers/each');\n\n/*!\n * ignore\n */\n\nmodule.exports = function saveSubdocs(schema) {\n  const unshift = true;\n  schema.s.hooks.pre('save', false, function saveSubdocsPreSave(next) {\n    if (this.$isSubdocument) {\n      next();\n      return;\n    }\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n    if (!subdocs.length) {\n      next();\n      return;\n    }\n    each(subdocs, function (subdoc, cb) {\n      subdoc.$__schema.s.hooks.execPre('save', subdoc, function (err) {\n        cb(err);\n      });\n    }, function (error) {\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('save:error', _this, [_this], {\n          error: error\n        }, function (error) {\n          next(error);\n        });\n      }\n      next();\n    });\n  }, null, unshift);\n  schema.s.hooks.post('save', async function saveSubdocsPostDeleteOne() {\n    const removedSubdocs = this.$__.removedSubdocs;\n    if (!removedSubdocs || !removedSubdocs.length) {\n      return;\n    }\n    const promises = [];\n    for (const subdoc of removedSubdocs) {\n      promises.push(new Promise((resolve, reject) => {\n        subdoc.$__schema.s.hooks.execPost('deleteOne', subdoc, [subdoc], function (err) {\n          if (err) {\n            return reject(err);\n          }\n          resolve();\n        });\n      }));\n    }\n    this.$__.removedSubdocs = null;\n    await Promise.all(promises);\n  });\n  schema.s.hooks.post('save', async function saveSubdocsPostSave() {\n    if (this.$isSubdocument) {\n      return;\n    }\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n    if (!subdocs.length) {\n      return;\n    }\n    const promises = [];\n    for (const subdoc of subdocs) {\n      promises.push(new Promise((resolve, reject) => {\n        subdoc.$__schema.s.hooks.execPost('save', subdoc, [subdoc], function (err) {\n          if (err) {\n            return reject(err);\n          }\n          resolve();\n        });\n      }));\n    }\n    try {\n      await Promise.all(promises);\n    } catch (error) {\n      await new Promise((resolve, reject) => {\n        this.$__schema.s.hooks.execPost('save:error', _this, [_this], {\n          error: error\n        }, function (error) {\n          if (error) {\n            return reject(error);\n          }\n          resolve();\n        });\n      });\n    }\n  }, null, unshift);\n};","map":{"version":3,"names":["each","require","module","exports","saveSubdocs","schema","unshift","s","hooks","pre","saveSubdocsPreSave","next","$isSubdocument","_this","subdocs","$getAllSubdocs","length","subdoc","cb","$__schema","execPre","err","error","execPost","post","saveSubdocsPostDeleteOne","removedSubdocs","$__","promises","push","Promise","resolve","reject","all","saveSubdocsPostSave"],"sources":["E:/Out/my-outpass/node_modules/mongoose/lib/plugins/saveSubdocs.js"],"sourcesContent":["'use strict';\n\nconst each = require('../helpers/each');\n\n/*!\n * ignore\n */\n\nmodule.exports = function saveSubdocs(schema) {\n  const unshift = true;\n  schema.s.hooks.pre('save', false, function saveSubdocsPreSave(next) {\n    if (this.$isSubdocument) {\n      next();\n      return;\n    }\n\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n\n    if (!subdocs.length) {\n      next();\n      return;\n    }\n\n    each(subdocs, function(subdoc, cb) {\n      subdoc.$__schema.s.hooks.execPre('save', subdoc, function(err) {\n        cb(err);\n      });\n    }, function(error) {\n      if (error) {\n        return _this.$__schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {\n          next(error);\n        });\n      }\n      next();\n    });\n  }, null, unshift);\n\n  schema.s.hooks.post('save', async function saveSubdocsPostDeleteOne() {\n    const removedSubdocs = this.$__.removedSubdocs;\n    if (!removedSubdocs || !removedSubdocs.length) {\n      return;\n    }\n\n    const promises = [];\n    for (const subdoc of removedSubdocs) {\n      promises.push(new Promise((resolve, reject) => {\n        subdoc.$__schema.s.hooks.execPost('deleteOne', subdoc, [subdoc], function(err) {\n          if (err) {\n            return reject(err);\n          }\n          resolve();\n        });\n      }));\n    }\n\n    this.$__.removedSubdocs = null;\n    await Promise.all(promises);\n  });\n\n  schema.s.hooks.post('save', async function saveSubdocsPostSave() {\n    if (this.$isSubdocument) {\n      return;\n    }\n\n    const _this = this;\n    const subdocs = this.$getAllSubdocs();\n\n    if (!subdocs.length) {\n      return;\n    }\n\n    const promises = [];\n    for (const subdoc of subdocs) {\n      promises.push(new Promise((resolve, reject) => {\n        subdoc.$__schema.s.hooks.execPost('save', subdoc, [subdoc], function(err) {\n          if (err) {\n            return reject(err);\n          }\n          resolve();\n        });\n      }));\n    }\n\n    try {\n      await Promise.all(promises);\n    } catch (error) {\n      await new Promise((resolve, reject) => {\n        this.$__schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {\n          if (error) {\n            return reject(error);\n          }\n          resolve();\n        });\n      });\n    }\n  }, null, unshift);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}