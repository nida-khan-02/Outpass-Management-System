{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import Login from './Components/Login';\n// import StudentDashboard from './Components/StudentDashboard';\n// import WardenDashboard from './Components/WardenDashboard';\n// import User from '../../backend/models/User';\n\n// function App() {\n\n//   return (\n\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n//         <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\n//         <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={User.hostelName} />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios'; // Import Axios for making API requests\nimport Login from './Components/Login';\nimport StudentDashboard from './Components/StudentDashboard';\nimport WardenDashboard from './Components/WardenDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [hostelName, setHostelName] = useState(null);\n\n  // Function to fetch the logged-in user's hostel name\n  const fetchUserHostelName = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Get the token from local storage (assuming authentication)\n      const response = await axios.get('/api/user-info', {\n        headers: {\n          Authorization: `Bearer ${token}` // Pass the token for authentication\n        }\n      });\n      const userData = response.data;\n      setHostelName(userData.hostelName); // Assuming the response contains hostelName\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n    }\n  };\n\n  // Use effect to fetch the hostel name once when the app loads\n  useEffect(() => {\n    fetchUserHostelName();\n  }, []); // Empty dependency array ensures it runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/student-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), hostelName && /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/warden-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(WardenDashboard, {\n          hostel: hostelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"StQr6PawvhlXxD9NW5Za2Ehxvhg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","axios","Login","StudentDashboard","WardenDashboard","jsxDEV","_jsxDEV","App","_s","hostelName","setHostelName","fetchUserHostelName","token","localStorage","getItem","response","get","headers","Authorization","userData","data","error","console","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","hostel","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/App.js"],"sourcesContent":["// import React from 'react';\r\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n// import Login from './Components/Login';\r\n// import StudentDashboard from './Components/StudentDashboard';\r\n// import WardenDashboard from './Components/WardenDashboard';\r\n// import User from '../../backend/models/User';\r\n\r\n// function App() {\r\n \r\n//   return (\r\n    \r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login />} />\r\n//         <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n//         <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={User.hostelName} />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport axios from 'axios'; // Import Axios for making API requests\r\nimport Login from './Components/Login';\r\nimport StudentDashboard from './Components/StudentDashboard';\r\nimport WardenDashboard from './Components/WardenDashboard';\r\n\r\nfunction App() {\r\n  const [hostelName, setHostelName] = useState(null);\r\n\r\n  // Function to fetch the logged-in user's hostel name\r\n  const fetchUserHostelName = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Get the token from local storage (assuming authentication)\r\n      const response = await axios.get('/api/user-info', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Pass the token for authentication\r\n        },\r\n      });\r\n      const userData = response.data;\r\n      setHostelName(userData.hostelName); // Assuming the response contains hostelName\r\n    } catch (error) {\r\n      console.error('Error fetching user info:', error);\r\n    }\r\n  };\r\n\r\n  // Use effect to fetch the hostel name once when the app loads\r\n  useEffect(() => {\r\n    fetchUserHostelName();\r\n  }, []); // Empty dependency array ensures it runs only once on component mount\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n        {/* Only render WardenDashboard if hostelName has been fetched */}\r\n        {hostelName && (\r\n          <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMgB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,gBAAgB,EAAE;QACjDC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;QACpC;MACF,CAAC,CAAC;MACF,MAAMO,QAAQ,GAAGJ,QAAQ,CAACK,IAAI;MAC9BV,aAAa,CAACS,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACAzB,SAAS,CAAC,MAAM;IACde,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA,CAACR,MAAM;IAAAyB,QAAA,eACLjB,OAAA,CAACN,MAAM;MAAAuB,QAAA,gBACLjB,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEnB,OAAA,CAACJ,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCvB,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,oBAAoB;QAACC,OAAO,eAAEnB,OAAA,CAACH,gBAAgB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEjEpB,UAAU,iBACTH,OAAA,CAACP,KAAK;QAACyB,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEnB,OAAA,CAACF,eAAe;UAAC0B,MAAM,EAAErB;QAAW;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACrB,EAAA,CApCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}