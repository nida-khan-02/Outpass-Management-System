{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './Components/Login';\nimport StudentDashboard from './Components/StudentDashboard';\nimport WardenDashboard from './Components/WardenDashboard';\nimport User from '../../backend/models/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/student-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/warden-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(WardenDashboard, {\n          hostel: User.hostelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import axios from 'axios'; // Import Axios for making API requests\n// import Login from './Components/Login';\n// import StudentDashboard from './Components/StudentDashboard';\n// import WardenDashboard from './Components/WardenDashboard';\n\n// function App() {\n//   const [hostelName, setHostelName] = useState(null);\n\n//   // Function to fetch the logged-in user's hostel name\n//   const fetchUserHostelName = async () => {\n//     try {\n//       const token = localStorage.getItem('token'); // Get the token from local storage (assuming authentication)\n//       const response = await axios.get('/api/user-info', {\n//         headers: {\n//           Authorization: `Bearer ${token}`, // Pass the token for authentication\n//         },\n//       });\n//       const userData = response.data;\n//       setHostelName(userData.hostelName); // Assuming the response contains hostelName\n//     } catch (error) {\n//       console.error('Error fetching user info:', error);\n//     }\n//   };\n\n//   // Use effect to fetch the hostel name once when the app loads\n//   useEffect(() => {\n//     fetchUserHostelName();\n//   }, []); // Empty dependency array ensures it runs only once on component mount\n\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n//         <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\n//         {/* Only render WardenDashboard if hostelName has been fetched */}\n//         {hostelName && (\n//           <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\n//         )}\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Login","StudentDashboard","WardenDashboard","User","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","hostel","hostelName","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './Components/Login';\r\nimport StudentDashboard from './Components/StudentDashboard';\r\nimport WardenDashboard from './Components/WardenDashboard';\r\nimport User from '../../backend/models/User';\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    \r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n        <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={User.hostelName} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n// import axios from 'axios'; // Import Axios for making API requests\r\n// import Login from './Components/Login';\r\n// import StudentDashboard from './Components/StudentDashboard';\r\n// import WardenDashboard from './Components/WardenDashboard';\r\n\r\n// function App() {\r\n//   const [hostelName, setHostelName] = useState(null);\r\n\r\n//   // Function to fetch the logged-in user's hostel name\r\n//   const fetchUserHostelName = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token'); // Get the token from local storage (assuming authentication)\r\n//       const response = await axios.get('/api/user-info', {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`, // Pass the token for authentication\r\n//         },\r\n//       });\r\n//       const userData = response.data;\r\n//       setHostelName(userData.hostelName); // Assuming the response contains hostelName\r\n//     } catch (error) {\r\n//       console.error('Error fetching user info:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Use effect to fetch the hostel name once when the app loads\r\n//   useEffect(() => {\r\n//     fetchUserHostelName();\r\n//   }, []); // Empty dependency array ensures it runs only once on component mount\r\n\r\n//   return (\r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login />} />\r\n//         <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n//         {/* Only render WardenDashboard if hostelName has been fetched */}\r\n//         {hostelName && (\r\n//           <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\r\n//         )}\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,IAAI,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAEb,oBAEED,OAAA,CAACR,MAAM;IAAAU,QAAA,eACLF,OAAA,CAACN,MAAM;MAAAQ,QAAA,gBACLF,OAAA,CAACP,KAAK;QAACU,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEJ,OAAA,CAACL,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCR,OAAA,CAACP,KAAK;QAACU,IAAI,EAAC,oBAAoB;QAACC,OAAO,eAAEJ,OAAA,CAACJ,gBAAgB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClER,OAAA,CAACP,KAAK;QAACU,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEJ,OAAA,CAACH,eAAe;UAACY,MAAM,EAAEX,IAAI,CAACY;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACG,EAAA,GAZQV,GAAG;AAcZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}