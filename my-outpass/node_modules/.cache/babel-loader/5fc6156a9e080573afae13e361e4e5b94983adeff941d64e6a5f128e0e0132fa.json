{"ast":null,"code":"var _jsxFileName = \"E:\\\\Out\\\\my-outpass\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './Components/Login';\nimport StudentDashboard from './Components/StudentDashboard';\nimport WardenDashboard from './Components/WardenDashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\nfunction App() {\n  _s();\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [hostelName, setHostelName] = useState(null);\n\n  // Function to check if the user is authenticated\n  const checkAuthentication = () => {\n    // const token = localStorage.getItem('token');\n    return token !== null;\n  };\n\n  // Function to fetch the user's hostelName once they are logged in\n  const fetchHostelName = async () => {\n    // Fetch the user's hostelName using the token\n    // const token = localStorage.getItem('token');\n    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\n    if (token) {\n      try {\n        const user = await axios.get('http://localhost:5000/api/auth/user', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setHostelName(user.hostelName);\n      } catch (error) {\n        console.error('Error fetching hostelName:', error);\n        // Handle token expiration or other auth errors here\n        // setIsAuthenticated(false);\n        // localStorage.removeItem('token');\n      }\n    }\n  };\n\n  // // Effect to check authentication on page load\n  // useEffect(() => {\n  //   const authenticated = checkAuthentication();\n  //   setIsAuthenticated(authenticated);\n  //   if (authenticated) {\n  //     fetchHostelName();  // Fetch hostelName if the user is authenticated\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [\"// Only render Login component if not authenticated\", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: () => {\n            // setIsAuthenticated(true);\n            fetchHostelName();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/student-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(StudentDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/warden-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(WardenDashboard, {\n            hostel: hostelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4rgevevmhTd8iQtvncEg5/6ix/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","axios","Login","StudentDashboard","WardenDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","token","App","_s","hostelName","setHostelName","checkAuthentication","fetchHostelName","user","get","headers","Authorization","error","console","children","path","element","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","hostel","_c","$RefreshReg$"],"sources":["E:/Out/my-outpass/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport axios from 'axios'; \r\nimport Login from './Components/Login';\r\nimport StudentDashboard from './Components/StudentDashboard';\r\nimport WardenDashboard from './Components/WardenDashboard';\r\n\r\n\r\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64';\r\n\r\nfunction App() {\r\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [hostelName, setHostelName] = useState(null);\r\n \r\n\r\n\r\n\r\n  // Function to check if the user is authenticated\r\n  const checkAuthentication = () => {\r\n    // const token = localStorage.getItem('token');\r\n    return token !== null;\r\n  };\r\n\r\n  // Function to fetch the user's hostelName once they are logged in\r\n  const fetchHostelName = async () => {\r\n   // Fetch the user's hostelName using the token\r\n    // const token = localStorage.getItem('token');\r\n    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NmM5YzM5NjQ1YzY3MWM2ZDhhNmU1NjUiLCJjYXRlZ29yeSI6InN0dWRlbnQiLCJpYXQiOjE3MjU2NDM3MTB9.DmkN-jHAv_ftcRqnTMxgsCVAlN7kU_CDlDdnipobx64'\r\n    if (token) {\r\n      try {\r\n        const user = await axios.get('http://localhost:5000/api/auth/user', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setHostelName(user.hostelName);\r\n      } catch (error) {\r\n        console.error('Error fetching hostelName:', error);\r\n        // Handle token expiration or other auth errors here\r\n        // setIsAuthenticated(false);\r\n        // localStorage.removeItem('token');\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  // // Effect to check authentication on page load\r\n  // useEffect(() => {\r\n  //   const authenticated = checkAuthentication();\r\n  //   setIsAuthenticated(authenticated);\r\n  //   if (authenticated) {\r\n  //     fetchHostelName();  // Fetch hostelName if the user is authenticated\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        \r\n          // Only render Login component if not authenticated\r\n          <Route path=\"/\" element={<Login onLoginSuccess={() => {\r\n            // setIsAuthenticated(true);\r\n            fetchHostelName();\r\n          }} />} />\r\n        \r\n          <>\r\n            <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n            {/* Pass hostelName as a prop to WardenDashboard */}\r\n            <Route path=\"/warden-dashboard\" element={<WardenDashboard hostel={hostelName} />} />\r\n          </>\r\n        \r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,MAAMC,KAAK,GAAG,uLAAuL;AAErM,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAKlD;EACA,MAAMmB,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,OAAOL,KAAK,KAAK,IAAI;EACvB,CAAC;;EAED;EACA,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;IACnC;IACC;IACA,MAAMN,KAAK,GAAG,uLAAuL;IACrM,IAAIA,KAAK,EAAE;MACT,IAAI;QACF,MAAMO,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,qCAAqC,EAAE;UAClEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUV,KAAK;UAChC;QACF,CAAC,CAAC;QACFI,aAAa,CAACG,IAAI,CAACJ,UAAU,CAAC;MAChC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;QACA;QACA;MACF;IACF;EACF,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEd,OAAA,CAACR,MAAM;IAAAwB,QAAA,eACLhB,OAAA,CAACN,MAAM;MAAAsB,QAAA,GAAC,qDAGJ,eAAAhB,OAAA,CAACP,KAAK;QAACwB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAElB,OAAA,CAACJ,KAAK;UAACuB,cAAc,EAAEA,CAAA,KAAM;YACpD;YACAV,eAAe,CAAC,CAAC;UACnB;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAETvB,OAAA,CAAAE,SAAA;QAAAc,QAAA,gBACEhB,OAAA,CAACP,KAAK;UAACwB,IAAI,EAAC,oBAAoB;UAACC,OAAO,eAAElB,OAAA,CAACH,gBAAgB;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAElEvB,OAAA,CAACP,KAAK;UAACwB,IAAI,EAAC,mBAAmB;UAACC,OAAO,eAAElB,OAAA,CAACF,eAAe;YAAC0B,MAAM,EAAElB;UAAW;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACpF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAClB,EAAA,CAhEQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}