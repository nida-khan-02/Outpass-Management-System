{"ast":null,"code":"var _jsxFileName = \"F:\\\\Out\\\\Outpass-Management-System\\\\my-outpass\\\\src\\\\Components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { getAuthToken, refreshAuthToken } from './Services/authService.js';\n\n// const PrivateRoute = ({ component: Component, ...rest }) => {\n//   const checkAuth = async () => {\n//     let token = getAuthToken();\n//     if (!token) {\n//       token = await refreshAuthToken();\n//     }\n//     return !!token;\n//   };\n\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         checkAuth() ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect to=\"/login\" />\n//         )\n//       }\n//     />\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  const checkAuth = async () => {\n    let token = getAuthToken();\n    if (!token) {\n      token = await refreshAuthToken();\n    }\n    return !!token;\n  };\n  return checkAuth() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 37\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","getAuthToken","refreshAuthToken","jsxDEV","_jsxDEV","PrivateRoute","children","checkAuth","token","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Out/Outpass-Management-System/my-outpass/src/Components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { getAuthToken, refreshAuthToken } from './Services/authService.js';\r\n\r\n// const PrivateRoute = ({ component: Component, ...rest }) => {\r\n//   const checkAuth = async () => {\r\n//     let token = getAuthToken();\r\n//     if (!token) {\r\n//       token = await refreshAuthToken();\r\n//     }\r\n//     return !!token;\r\n//   };\r\n\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={props =>\r\n//         checkAuth() ? (\r\n//           <Component {...props} />\r\n//         ) : (\r\n//           <Redirect to=\"/login\" />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\nconst PrivateRoute = ({ children }) => {\r\n    const checkAuth = async () => {\r\n      let token = getAuthToken();\r\n      if (!token) {\r\n        token = await refreshAuthToken();\r\n      }\r\n      return !!token;\r\n    };\r\n  \r\n    return checkAuth() ? children : <Navigate to=\"/login\" />;\r\n  };\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,2BAA2B;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,KAAK,GAAGP,YAAY,CAAC,CAAC;IAC1B,IAAI,CAACO,KAAK,EAAE;MACVA,KAAK,GAAG,MAAMN,gBAAgB,CAAC,CAAC;IAClC;IACA,OAAO,CAAC,CAACM,KAAK;EAChB,CAAC;EAED,OAAOD,SAAS,CAAC,CAAC,GAAGD,QAAQ,gBAAGF,OAAA,CAACJ,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1D,CAAC;AAACC,EAAA,GAVET,YAAY;AAYlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}