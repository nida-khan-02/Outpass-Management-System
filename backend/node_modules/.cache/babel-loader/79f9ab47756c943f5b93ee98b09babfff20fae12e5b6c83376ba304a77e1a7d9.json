{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\napp.use(cors());\napp.use(express.json());\n\n// MongoDB connection\nmongoose.connect('mongodb+srv://nidakhan:wf6DL5yPqT5ygQHU@cluster0.j09ys.mongodb.net/', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('MongoDB connected...')).catch(err => console.log(err));\napp.get('/', (req, res) => {\n  res.send('API is running...');\n});\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));","map":{"version":3,"names":["express","require","mongoose","cors","app","PORT","process","env","use","json","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","get","req","res","send","listen"],"sources":["E:/Out/backend/src/index.js"],"sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 5000;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\n// MongoDB connection\r\nmongoose.connect('mongodb+srv://nidakhan:wf6DL5yPqT5ygQHU@cluster0.j09ys.mongodb.net/', { useNewUrlParser: true, useUnifiedTopology: true })\r\n  .then(() => console.log('MongoDB connected...'))\r\n  .catch(err => console.log(err));\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('API is running...');\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErCD,GAAG,CAACI,GAAG,CAACL,IAAI,CAAC,CAAC,CAAC;AACfC,GAAG,CAACI,GAAG,CAACR,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAP,QAAQ,CAACQ,OAAO,CAAC,qEAAqE,EAAE;EAAEC,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC,CACzIC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAC/CC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;AAEjCb,GAAG,CAACc,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,mBAAmB,CAAC;AAC/B,CAAC,CAAC;AAEFjB,GAAG,CAACkB,MAAM,CAACjB,IAAI,EAAE,MAAMS,OAAO,CAACC,GAAG,CAAC,0BAA0BV,IAAI,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}